{"version":3,"sources":["assets/img/logo-simple.png","classes/Utils.js","actions/index.js","actions/types.js","assets/js/DocumentationViewer.js","components/ViewerSettings.js","components/DocumentationViewer.js","components/Viewer/gitRenderedLink.js","components/Viewer/gitRenderedImage.js","components/Viewer/gitRenderedText.js","components/Viewer/GitViewer.js","assets/js/DataTree.js","components/DataTree/DataTree.js","components/DataTree/DataTreeItem.js","components/DataTree/DataTreeCollapseItem.js","components/Viewer/GitBuilder.js","components/Viewer/GitSearcher.js","components/App.js","reducers/ViewerReducer.js","reducers/SettingsReducer.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","forbiddenProps","forEach","collection","callback","arguments","length","undefined","_","each","obj","key","indexOf","setState","type","payload","selectDocument","dispatch","uri","setDocTypes","types","setDocType","index","checkBrowserHistory","getDocumentstionTypes","pathToFile","getState","view","fetch","then","response","text","data","yaml","safeLoad","TYPES","map","row","concat","user","repo","currentType","catch","err","console","log","getRepoData","VERSION","USER","REPO","version","tocFile","uriToRepo","uriToFetch","res","header","pages","promises","contents","tree","treeObjects","prev","next","push","Promise","resolve","reject","all","documents","getRepoVersions","json","versions","ver","name","settingsToggleOpened","settingsSetProperty","styles","theme","grow","flexGrow","sideBarDrawer","width","height","overflow","sideBarInner","position","display","flex","appContainer","backgroundColor","flexDirection","headerContainer","zIndex","headerLogo","padding","paddingLeft","boxSizing","float","marginRight","headerLogoImg","maxHeight","opacity","border","boxShadow","headerTypesSelectorControl","marginLeft","minWidth","palette","borderRadius","mainContainer","Object","defineProperty","breakpoints","down","contentContainer","background","default","content","left","top","versionSelect","versionBoxContainer","builderContainer","menuButton","title","up","searchContainer","search","fade","common","white","&:hover","color","searchIcon","spacing","unit","pointerEvents","alignItems","justifyContent","closeIcon","right","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","transition","transitions","create","&:focus","permanentDrawer","selectClass","settingsBlock","minHeight","paper","settingsTextField","ViewerSettings","event","cookies","this","props","prop","value","target","set","path","classes","react_default","a","createElement","TextField_default","select","label","className","onChange","themeChangeHandler","bind","margin","variant","MenuItem_default","_this$props","Zoom_default","in","opened","renderThemeSetting","Component","connectedViewerStyles","connect","state","settings","withStyles","ViewerStyles","withCookies","DocumentationViewer","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","open","_this2","docsFile","searcher","builder","viewer","createHistory","listen","location","doc","jsPDF","document","getElementById","fromHTML","innerHTML","save","FormControl_default","Select_default","handleTypesSelectorChange","displayEmpty","values","_this3","Swipeable_default","style","delta","onSwipingLeft","toggleDrawer","onSwipingRight","Hidden_default","smDown","Drawer_default","lib_default","Divider_default","mdUp","onClose","onOpen","ModalProps","keepMounted","onBackdropClick","AppBar_default","Toolbar_default","disableGutters","IconButton_default","aria-label","onClick","Close_default","renderTypesSelector","src","logo","alt","Typography_default","noWrap","generatePdf","PictureAsPdf_default","Menu_default","toggleSettings","Settings_default","currentElement","id","components_ViewerSettings","connectedDocumentationViewer","_state$view","Actions","gitRenderedLink","currentUri","folder","lastIndexOf","li","slice","href","preventDefault","getCurrentFolder","findElementInTree","rel","children","handleClick","gitRenderedImage","searchString","reg","RegExp","replace","html","GitViewer","KeyboardArrowLeft_default","fontSize","_this$props2","KeyboardArrowRight_default","_this$props3","react","renderPrev","renderNext","react_markdown_default","source","disallowedTypes","renderers","renderedText","link","renderedLink","image","renderedImage","Styles","dataTreeSubList","listItemText","listModuleItem","collapseItemParent","action","hover","marginBottom","notFoundBlock","textAlign","dataTreeItem","dataTreeSelectedItem","selected","DataTree","line","current","DataTree_DataTreeCollapseItem","DataTree_DataTreeItem","dataTreeContainer","List_default","dense","renderListItem","connectedDataTree","DataTreeStyles","DataTreeItem","JSON","parse","ListItem_default","button","ListItemText_default","primary","connectedDataTreeItem","DataTreeCollapseItem","Collapse_default","timeout","unmountOnExit","components_DataTree_DataTree","toggleCollapse","ListItemIcon_default","FolderOpen_default","Folder_default","inset","ExpandLess_default","ExpandMore_default","renderCollapseList","GitBuilder","newProps","inTree","elem","FormHelperText_default","temp","i","o","t","prepareTreeData","objectSpread","element","listItemClick","renderVersions","renderTree","connectedGitBuilder","GitSearcher","str","charCode","blur","Search_default","InputBase_default","placeholder","root","input","handeSearchChange","onKeyPress","handleSearchKeyPress","Button_default","handleCancleClick","connectedGitSearcher","App","createMuiTheme","Viewer_GitBuilder","Viewer_GitSearcher","Viewer_GitViewer","core_styles","components_DocumentationViewer","INITIAL_STATE","parseLocation","0","1","2","PATH","history","hash","Cookies","get","reducers","combineReducers","verstion","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","render","es","es6","components_App"],"mappings":"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","file":"static/js/main.6207bdf8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-simple.5c40071b.png\";","import _ from 'lodash';\r\nconst forbiddenProps = ['prev', 'next'];\r\n\r\nexport const forEach = (collection, callback = null) => {\r\n    _.each(collection, (obj, key) => {\r\n        if(typeof obj === 'object' && forbiddenProps.indexOf(key) === -1 ) {\r\n            forEach(obj, callback);\r\n        }\r\n\r\n        if(callback) {\r\n            return callback(obj);\r\n        }\r\n    });\r\n}\r\n\r\nexport const getSearchParams = (str) => {\r\n    const result = {};\r\n    let query = str;\r\n\r\n    if(query.indexOf('?') === 0) \r\n        query = str.substring(1);\r\n\r\n    var vars = query.split(\"&\");\r\n    \r\n    for (var i=0;i<vars.length;i++) {\r\n        var pair = vars[i].split(\"=\");\r\n        result[pair[0]] = pair[1];\r\n    } \r\n\r\n    return result;\r\n}","import * as Types from 'actions/types';\r\nimport yaml from 'js-yaml';\r\n\r\nimport { forEach } from 'classes/Utils.js';\r\n\r\nexport const setState = (obj) => {\r\n    return {\r\n        type: Types.SET_STATE,\r\n        payload: obj\r\n    };\r\n}\r\n\r\nexport const selectDocument = (obj) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch({\r\n            type: Types.SELECT_DOCUMENT,\r\n            payload: obj.uri\r\n        });\r\n\r\n        dispatch({\r\n            type: Types.CHECK_BROWSER_HISTORY\r\n        });\r\n    };\r\n}\r\n\r\nexport const setDocTypes = (types) => {\r\n    return {\r\n        type: Types.SET_DOCUMENTATION_TYPES,\r\n        payload: types\r\n    };\r\n};\r\n\r\n\r\nexport const setDocType = (index) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n                type: Types.SET_DOCUMENTATION_TYPE,\r\n                payload: index\r\n            });\r\n    };\r\n    \r\n};\r\n\r\nexport const checkBrowserHistory = (location = null) => {\r\n    return {\r\n        type: Types.CHECK_BROWSER_HISTORY,\r\n        payload: location\r\n    };\r\n}\r\n\r\nexport const getDocumentstionTypes = (pathToFile) => {\r\n    return (dispatch, getState) => {\r\n        const currentState = getState();\r\n        const { view } = currentState;\r\n\r\n        fetch(pathToFile)\r\n            .then(response => response.text())\r\n            .then(data => {\r\n                const types = yaml.safeLoad(data);\r\n                const TYPES = {};\r\n\r\n\r\n                if (types && types.length > 0) {\r\n                    types.map(row => {\r\n                        TYPES[`${row.user}-${row.repo}`] = row;\r\n                    });\r\n\r\n                    dispatch({\r\n                        type: Types.SET_DOCUMENTATION_TYPES,\r\n                        payload: TYPES\r\n                    });\r\n\r\n                    if (view.user === null && view.repo === null) {\r\n                        dispatch({\r\n                            type: Types.SET_DOCUMENTATION_TYPE,\r\n                            payload: `${types[0].user}-${types[0].repo}`\r\n                        });\r\n                    } else {\r\n                        dispatch({\r\n                            type: Types.SET_STATE,\r\n                            payload: {currentType: `${view.user}-${view.repo}`}\r\n                        });\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n}\r\n\r\nexport const getRepoData = (VERSION, USER, REPO) => {\r\n    return (dispatch, getState) => {\r\n        const currentState = getState();\r\n        const { view } = currentState;\r\n\r\n        const version = VERSION || view.version;\r\n        const user = USER || view.user;\r\n        const repo = REPO || view.repo;\r\n\r\n        const index = view.tocFile || 'index.yml';\r\n\r\n        if (!version || !user || !repo) return;\r\n\r\n        const uriToRepo = `https://raw.githubusercontent.com/${user}/${repo}/${version}/`;\r\n        const uriToFetch = `${uriToRepo}${index}`;\r\n\r\n        fetch(uriToFetch)\r\n            .then(response => response.text())\r\n            .then((data) => {\r\n                const res = yaml.safeLoad(data);\r\n\r\n                if(res && res.header) {\r\n                    dispatch({\r\n                        type: Types.SET_STATE,\r\n                        payload: { header: res.header }\r\n                    });\r\n                }\r\n\r\n                if(res && res.pages && res.pages.length > 0) {\r\n                    const promises = [];\r\n                    const contents = {};\r\n                    const tree = res.pages;\r\n                    const treeObjects = {};\r\n                    let prev = null;\r\n\r\n                    forEach(tree, (obj) => {\r\n                        if (obj.uri && obj.uri != '') {\r\n\r\n                            if(prev !== null) {\r\n                                prev.next = obj;\r\n                                obj.prev = prev;\r\n                            }\r\n\r\n                            prev = obj;\r\n                            treeObjects[obj.uri] = obj;\r\n                            \r\n                            promises.push(new Promise((resolve, reject) => {\r\n                                fetch(`${uriToRepo}${obj.uri}`)\r\n                                    .then(response => response.text())\r\n                                    .then((data) => {\r\n                                        contents[obj.uri] = data;\r\n\r\n                                        resolve(data);\r\n                                    })\r\n                                    .catch((err) => {\r\n                                        reject(err);\r\n                                    });\r\n                            }));\r\n                        }\r\n                    });\r\n\r\n                    return Promise.all(promises)\r\n                        .then(() => {\r\n                            dispatch({\r\n                                type: Types.SET_REPO_DOCUMENTS_CONTENT,\r\n                                payload: contents\r\n                            });\r\n\r\n                            dispatch({\r\n                                type: Types.SET_STATE,\r\n                                payload: { tree, version, treeObjects }\r\n                            });\r\n                        });\r\n                } else {\r\n                    dispatch({\r\n                        type: Types.SET_STATE,\r\n                        payload: {\r\n                            tree: [],\r\n                            documents: {}\r\n                        }\r\n                    });\r\n                }\r\n        });\r\n    };\r\n    \r\n};\r\n\r\nexport const getRepoVersions = (USER = null, REPO = null) => {\r\n    return (dispatch, getState) => {\r\n        const currentState = getState();\r\n        const { view } = currentState;\r\n\r\n        const user = USER || view.user;\r\n        const repo = REPO || view.repo;\r\n\r\n        const uriToFetch = `https://api.github.com/repos/${user}/${repo}/tags`;\r\n\r\n        fetch(uriToFetch)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                let versions = [];\r\n\r\n                if (json.length > 0) {\r\n                    versions = json.map((ver) => ver.name);\r\n                }\r\n\r\n                dispatch({\r\n                    type: Types.SET_STATE,\r\n                    payload: {versions}\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\nexport const settingsToggleOpened = () => {\r\n    return {\r\n        type: Types.SET_TOGGLE_OPENED\r\n    };\r\n};\r\n\r\nexport const settingsSetProperty = (obj) => {\r\n    return {\r\n        type: Types.SET_PROP,\r\n        payload: obj\r\n    }\r\n};","export const SET_STATE = \"set_state\";\r\nexport const SELECT_DOCUMENT = \"select_document\";\r\nexport const SET_DOCUMENTATION_TYPES = \"set_doc_types\";\r\nexport const SET_DOCUMENTATION_TYPE = \"set_doc_type\";\r\nexport const CHECK_BROWSER_HISTORY = \"check_browser_history\";\r\nexport const SET_REPO_DOCUMENTS_CONTENT = \"set_repo_docs_content\";\r\n\r\nexport const SET_TOGGLE_OPENED = \"settings_set_opened\"; \r\nexport const SET_PROP = \"settings_set_property\"; ","import { fade } from '@material-ui/core/styles/colorManipulator';\r\n\r\nconst styles = (theme) => {\r\n    return {\r\n        grow: {\r\n        flexGrow: 1,\r\n        },\r\n        sideBarDrawer: {\r\n            width: 240,\r\n            height: '100%',\r\n            overflow: 'hidden'\r\n        },\r\n        sideBarInner: {\r\n            position: 'relative', \r\n            display: 'flex', \r\n            flex: 1, \r\n            width: '100%', \r\n            height: '100%'\r\n        },\r\n        appContainer: {\r\n            display: 'flex',\r\n            flex: 1,\r\n            flexGrow: 1,\r\n            backgroundColor: '#cdcdcd',\r\n            flexDirection: 'column'\r\n        },\r\n        headerContainer: {\r\n            width: '100%',\r\n            backgroundColor: '#343434',\r\n            position: 'relative',\r\n            zIndex: 1\r\n        },\r\n        headerLogo: {\r\n            height: '100%',\r\n            padding: 10,\r\n            paddingLeft: 0,\r\n            boxSizing: 'border-box',\r\n            float: 'left',\r\n            marginRight: 20\r\n        },\r\n        headerLogoImg: {\r\n            maxHeight: 40,\r\n            width: 'auto',\r\n            opacity: 1,\r\n            border: '1px solid #fff',\r\n            boxShadow: '3px 3px 10px rgba(0,0,0,0.7)'\r\n        },\r\n        headerTypesSelectorControl: {\r\n            marginLeft: 20,\r\n            minWidth: 150,\r\n            backgroundColor: theme.palette.type === 'light'? '#fff' : 'transparent',\r\n            borderRadius: 2,\r\n            overflow: 'hidden'\r\n        },\r\n\r\n        mainContainer: {\r\n            backgroundColor: '#565656',\r\n            display: 'flex',\r\n            flex: 1,\r\n            flexDirection: 'column',\r\n            paddingLeft: 240,\r\n            [theme.breakpoints.down('sm')]: {\r\n                paddingLeft: 0\r\n            }\r\n        },\r\n        contentContainer: {\r\n            width: '100%',\r\n            display: 'flex',\r\n            flex: 3,\r\n            backgroundColor: theme.palette.background.default,\r\n            padding: 20,\r\n            boxSizing: 'border-box',\r\n            position: 'relative'\r\n        },\r\n        content: {\r\n            width: '100%',\r\n            height: '100%',\r\n            position: 'absolute',\r\n            left: 0,\r\n            top: 0\r\n        },\r\n        versionSelect: {\r\n            width: '100%',\r\n        },\r\n        versionBoxContainer: {\r\n            padding: 10,\r\n        },\r\n\r\n        builderContainer: {\r\n            position: 'absolute',\r\n            left: 0,\r\n            top: 0,\r\n            width: '100%',\r\n            height: '100%'\r\n        },\r\n\r\n        //**********\r\n        menuButton: {\r\n            marginLeft: 5\r\n        },\r\n        title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n        },\r\n        searchContainer: {\r\n            padding: 10\r\n        },\r\n        search: {\r\n            position: 'relative',\r\n            borderRadius: 5,\r\n            backgroundColor: fade(theme.palette.common.white, 0.15),\r\n            '&:hover': {\r\n                backgroundColor: fade(theme.palette.common.white, 0.25),\r\n            },\r\n            width: '100%',\r\n            boxShadow: '2px 2px 4px rgba(0,0,0,0.2)',\r\n            color: theme.palette.type === 'light'? '#000' : '#fff'\r\n        },\r\n        searchIcon: {\r\n            width: theme.spacing.unit * 5,\r\n            height: '100%',\r\n            position: 'absolute',\r\n            pointerEvents: 'none',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        closeIcon: {\r\n            width: theme.spacing.unit * 5,\r\n            height: '100%',\r\n            position: 'absolute',\r\n            padding: 0,\r\n            minWidth: theme.spacing.unit * 5,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            right: 0,\r\n            top: 0\r\n        },\r\n        inputRoot: {\r\n            color: 'inherit',\r\n            width: '100%',\r\n        },\r\n        inputInput: {\r\n            paddingTop: theme.spacing.unit,\r\n            paddingRight: theme.spacing.unit * 5,\r\n            paddingBottom: theme.spacing.unit,\r\n            paddingLeft: theme.spacing.unit * 5,\r\n            transition: theme.transitions.create('width'),\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 120,\r\n                '&:focus': {\r\n                width: 200,\r\n                },\r\n            },\r\n        },\r\n        permanentDrawer: {\r\n            boxShadow: '0px 0px 10px rgba(0,0,0,0.3)'\r\n        },\r\n        selectClass: {\r\n            padding: '5px 5px',\r\n        },\r\n        settingsBlock: {\r\n            width: 200,\r\n            minHeight: 100,\r\n            backgroundColor: theme.palette.background.paper,\r\n            position: 'absolute',\r\n            top: 70,\r\n            right: 2,\r\n            boxShadow: '2px 2px 6px rgba(0,0,0,0.5)',\r\n            borderRadius: 5,\r\n            padding: '0px 10px'\r\n        },\r\n        settingsTextField: {\r\n            width: '100%'\r\n        }\r\n    }\r\n};\r\n\r\nexport default styles;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport { withCookies } from 'react-cookie';\r\n\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport {\r\n    settingsSetProperty,\r\n    settingsToggleOpened\r\n} from 'actions/index';\r\n\r\nimport ViewerStyles from 'assets/js/DocumentationViewer.js';\r\n\r\nclass ViewerSettings extends Component {\r\n    themeChangeHandler(event) {\r\n        const { cookies } = this.props;\r\n        this.props.settingsSetProperty({prop: \"theme\", value: event.target.value});\r\n        this.props.settingsToggleOpened();\r\n        cookies.set('theme', event.target.value, { path: '/' });\r\n    }\r\n\r\n    renderThemeSetting() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <TextField\r\n                select\r\n                label=\"Color theme\"\r\n                className={classes.settingsTextField}\r\n                value={this.props.theme}\r\n                onChange={this.themeChangeHandler.bind(this)}\r\n                margin=\"normal\"\r\n                variant=\"filled\"\r\n            >\r\n                <MenuItem value=\"light\">Light</MenuItem>\r\n                <MenuItem value=\"dark\">Dark</MenuItem>\r\n            </TextField>\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        const { classes, cookies } = this.props;\r\n        return (\r\n            <Zoom\r\n                in={this.props.opened}\r\n            >\r\n                <div className={classes.settingsBlock}>\r\n                    {this.renderThemeSetting()}\r\n                </div>\r\n            </Zoom>\r\n        );\r\n    }\r\n}\r\n\r\nViewerSettings.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    cookies: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state.settings;\r\n};\r\n\r\nconst connectedViewerStyles = connect(mapStateToProps, { \r\n    settingsSetProperty,\r\n    settingsToggleOpened\r\n}) (ViewerSettings);\r\n\r\n\r\nexport default withStyles(ViewerStyles)(withCookies(connectedViewerStyles));","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Swipeable from 'react-swipeable';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport ViewerSettings from 'components/ViewerSettings';\r\n//actions\r\nimport * as Actions from 'actions/index';\r\n\r\n//assets\r\nimport ViewerStyles from 'assets/js/DocumentationViewer.js';\r\nimport 'assets/Viewer.css';\r\nimport logo from 'assets/img/logo-simple.png';\r\nimport createHistory from 'history/createBrowserHistory';\r\n \r\n\r\n//******************************** */\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\n\r\nimport jsPDF from 'jspdf';\r\n\r\nclass DocumentationViewer extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            open: false\r\n      };\r\n    }\r\n\r\n    componentWillMount() {\r\n        const { docsFile } = this.props;\r\n\r\n        if (this.props.searcher) this.searcher = this.props.searcher;\r\n        if (this.props.builder) this.builder = this.props.builder;\r\n        if (this.props.viewer) this.viewer = this.props.viewer;\r\n\r\n        if (docsFile) {\r\n            this.props.getDocumentstionTypes(docsFile);\r\n        }\r\n\r\n        this.props.checkBrowserHistory();\r\n\r\n        const history = createHistory();\r\n        history.listen((location) => {\r\n            this.props.checkBrowserHistory(location);\r\n        })\r\n    }\r\n\r\n    generatePdf() { \r\n        var doc = new jsPDF();\r\n        var content = document.getElementById('content_area');\r\n        const docName = 'Document'\r\n        doc.fromHTML(content.innerHTML, 10, 10,{\r\n            'width': 180, \r\n        });\r\n\r\n        doc.save(`${docName}.pdf`);\r\n    }\r\n\r\n    toggleSettings() {\r\n        this.props.settingsToggleOpened();\r\n    }\r\n\r\n    toggleDrawer(open) {\r\n        this.setState({open});\r\n    }\r\n\r\n    handleTypesSelectorChange(event) {\r\n        const index = event.target.value;\r\n        \r\n        if(index != '') {\r\n            this.props.setDocType(index);\r\n        }\r\n    }\r\n\r\n    renderTypesSelector() {\r\n        const { types, currentType, classes } = this.props;\r\n        const value = currentType || ''; \r\n\r\n        if (types) {\r\n            return (\r\n                <FormControl className={classes.headerTypesSelectorControl}>\r\n                    <Select\r\n                        value={value}\r\n                        onChange={this.handleTypesSelectorChange.bind(this)}\r\n                        displayEmpty\r\n                        classes={{\r\n                            select: classes.selectClass\r\n                        }}\r\n                    >\r\n                        {Object.values(types).map((row) => {\r\n                            return <MenuItem value={`${row.user}-${row.repo}`}>{row.name}</MenuItem>;\r\n                        })}\r\n                    </Select>\r\n                </FormControl>\r\n            );\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        \r\n        return (\r\n            <Swipeable\r\n                style={{\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    position: 'relative',\r\n                    display: 'flex',\r\n                    flex: 1\r\n                }}\r\n                delta={80}\r\n                onSwipingLeft={() => this.toggleDrawer(false)}\r\n                onSwipingRight={() => this.toggleDrawer(true)}\r\n            >\r\n            <div className={classes.appContainer + ' ' + this.props.className}> \r\n                <Hidden smDown>\r\n                    <Drawer\r\n                        variant=\"permanent\" \r\n                        open={true}\r\n                    >   \r\n                        <div className={classes.sideBarDrawer}>\r\n                            <div className={classes.builderContainer}>\r\n                                <PerfectScrollbar>\r\n                                    {this.props.searcher}\r\n                                    <Divider />\r\n                                    {this.props.builder}\r\n                                </PerfectScrollbar>\r\n                            </div>\r\n                        </div>\r\n                    </Drawer>\r\n                </Hidden>\r\n\r\n                <Hidden mdUp>\r\n                    <Drawer\r\n                        open={this.state.open}\r\n                        onClose={() => this.toggleDrawer(false)}\r\n                        onOpen={() => this.toggleDrawer(true)}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                            onBackdropClick: () => this.toggleDrawer(false)\r\n                        }}\r\n                    >   \r\n                        <div className={classes.sideBarDrawer}>\r\n                            <AppBar position=\"static\">\r\n                                <Toolbar disableGutters>\r\n                                    <IconButton \r\n                                        className={classes.menuButton} \r\n                                        color=\"inherit\" \r\n                                        aria-label=\"Toggle sidebar\"\r\n                                        onClick={() => this.toggleDrawer(false)}\r\n                                    >\r\n                                        <CloseIcon />\r\n                                    </IconButton>\r\n\r\n                                    {this.renderTypesSelector()}\r\n                                </Toolbar>\r\n                            </AppBar>\r\n\r\n                            <div className={classes.sideBarInner}>\r\n                                <div className={classes.builderContainer}>\r\n                                    <PerfectScrollbar>\r\n                                        {this.props.searcher}\r\n                                        <Divider />\r\n                                        {this.props.builder}\r\n                                    </PerfectScrollbar>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Drawer>\r\n                </Hidden>\r\n                <div className={classes.mainContainer}>\r\n                    <div className={classes.headerContainer}>\r\n                        <AppBar position=\"static\">\r\n                            <Toolbar>\r\n                                <div className={classes.headerLogo}>\r\n                                    <img className={classes.headerLogoImg} src={logo} alt=\"logo\" />\r\n                                </div>\r\n\r\n                                <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n                                    {this.props.header}\r\n                                </Typography>\r\n\r\n\r\n                                <Hidden smDown>\r\n                                    {this.renderTypesSelector()}\r\n                                </Hidden>\r\n                                \r\n                                <div className={classes.grow} />\r\n\r\n                                {\r\n                                    this.props.content !== '' ? (\r\n                                        <IconButton \r\n                                            className={classes.menuButton} \r\n                                            color=\"inherit\" \r\n                                            aria-label=\"Toggle sidebar\"\r\n                                            onClick={() => this.generatePdf()}\r\n                                        >\r\n                                            <PictureAsPdfIcon />\r\n                                        </IconButton>\r\n                                    ) : ''\r\n                                }\r\n\r\n                                <Hidden mdUp>\r\n                                    <IconButton \r\n                                        className={classes.menuButton} \r\n                                        color=\"inherit\" \r\n                                        aria-label=\"Toggle sidebar\"\r\n                                        onClick={() => this.toggleDrawer(true)}\r\n                                    >\r\n                                        <MenuIcon />\r\n                                    </IconButton>\r\n                                </Hidden>\r\n\r\n                                <IconButton \r\n                                    className={classes.menuButton} \r\n                                    color=\"inherit\" \r\n                                    aria-label=\"Toggle sidebar\"\r\n                                    onClick={() => this.toggleSettings(true)}\r\n                                >\r\n                                    <SettingsIcon />\r\n                                </IconButton>\r\n                            </Toolbar>\r\n                        </AppBar>\r\n                    </div>\r\n                    <div className={classes.contentContainer}>\r\n                        <div className={classes.content}>\r\n                            <PerfectScrollbar key={this.props.currentElement ? this.props.currentElement.uri : 'index'}>\r\n                                    <div className=\"content-area\" id=\"content_area\">\r\n                                        {this.props.viewer}\r\n                                    </div>\r\n                            </PerfectScrollbar>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <ViewerSettings />\r\n            </div>\r\n            </Swipeable>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nDocumentationViewer.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { header, currentType, types, docsFile } = state.view;\r\n\r\n    return { header, currentType, types, docsFile };\r\n};\r\n\r\nconst connectedDocumentationViewer = connect(mapStateToProps, Actions )(DocumentationViewer);\r\n\r\nexport default withStyles(ViewerStyles)(connectedDocumentationViewer);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {forEach} from 'classes/Utils';\r\n\r\n//actions\r\nimport * as Actions from 'actions/index';\r\n\r\nclass gitRenderedLink extends Component  {\r\n    getCurrentFolder() {\r\n        const { currentUri } = this.props; \r\n        let folder = '';\r\n\r\n        if (currentUri) {\r\n            const uri = currentUri;\r\n\r\n            if (uri != '') {\r\n                if(uri.lastIndexOf('/') > 0) {\r\n                    const li = uri.lastIndexOf('/') + 1;\r\n                    folder = uri.slice(0,li);\r\n                }\r\n            }\r\n        }\r\n\r\n        return folder;\r\n    }\r\n\r\n    findElementInTree(path) {\r\n        const { tree } = this.props;\r\n\r\n        forEach(tree, (obj) => {\r\n            if (obj.uri && obj.uri === path) {\r\n                this.props.selectDocument(obj);\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n\r\n    handleClick(event, href) {\r\n        event.preventDefault();\r\n\r\n        let path = href;\r\n\r\n        if(path.indexOf('/') === 0) {\r\n            path = path.slice(1, path.length);\r\n        } else if (path.indexOf('/') == -1) {\r\n            path = this.getCurrentFolder() + path;\r\n        }\r\n\r\n        this.findElementInTree(path);\r\n    }\r\n\r\n    render() {\r\n        const { href } = this.props;\r\n\r\n        if (href != '') {\r\n            if (href.indexOf('http') === 0 || href.indexOf('https') === 0 || href.indexOf('ftp') === 0) {\r\n                return (\r\n                    <a href={href} target=\"_blank\" rel=\"noopener noreferrer\">{this.props.children}</a>\r\n                );\r\n            } else {\r\n                return (\r\n                    <a href={href} onClick={(event) => this.handleClick(event, href)}>{this.props.children}</a>\r\n                );\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { tree, currentUri } = state.view;\r\n    return { tree, currentUri };\r\n};\r\n\r\nexport default connect(mapStateToProps, Actions)(gitRenderedLink);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass gitRenderedImage extends Component  {\r\n    getCurrentFolder() {\r\n        const { currentUri } = this.props; \r\n        let folder = '';\r\n\r\n        if (currentUri && currentUri != '') {\r\n            const uri = currentUri;\r\n\r\n            if (uri != '') {\r\n                if(uri.lastIndexOf('/') > 0) {\r\n                    const li = uri.lastIndexOf('/') + 1;\r\n                    folder = uri.slice(0,li);\r\n                }\r\n            }\r\n        }\r\n\r\n        return folder;\r\n    }\r\n\r\n    render() {\r\n        const { src, alt, user, repo, version  } = this.props;\r\n        let path;\r\n\r\n        if (src != '') {\r\n            if (src.indexOf('http') === 0 || src.indexOf('https') === 0 || src.indexOf('ftp') === 0) {\r\n                return (\r\n                    <img src={src} alt={alt} />\r\n                );\r\n            } else {\r\n                if (src.indexOf('/') === 0) {\r\n                    path = `https://raw.githubusercontent.com/${user}/${repo}/${version}/${src}`;\r\n                } else {\r\n                    path = `https://raw.githubusercontent.com/${user}/${repo}/${version}/${this.getCurrentFolder()}${src}`;\r\n                }\r\n                \r\n                return (\r\n                    <img src={path} alt={alt} />\r\n                );\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { user, repo, version, currentUri } = state.view;\r\n    return { user, repo, version, currentUri };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(gitRenderedImage);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport html from 'react-inner-html';\r\n\r\nclass gitRenderedImage extends Component  {\r\n\r\n\r\n    render() {\r\n        let { value, searchString } = this.props;\r\n        const reg = new RegExp(searchString, 'gi');\r\n        if (searchString != '') {\r\n            value = value.replace(reg, '<span class=\"highlight\">$&</span>');\r\n        } \r\n\r\n        return <span {...html(value)} />;\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { searchString } = state.view;\r\n    return { searchString };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(gitRenderedImage);","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\n//actions\r\nimport * as Actions from 'actions/index';\r\nimport renderedLink from './gitRenderedLink';\r\nimport renderedImage from './gitRenderedImage';\r\nimport renderedText from './gitRenderedText';\r\n\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nclass GitViewer extends Component {\r\n    renderPrev() {\r\n        const { treeObjects, currentUri } = this.props; \r\n        const doc = treeObjects[currentUri];\r\n\r\n        if (doc && doc.prev) {\r\n            return (\r\n                <div className=\"content-prev-doc\" onClick={() => this.props.selectDocument(doc.prev)}>\r\n                    <KeyboardArrowLeft fontSize=\"large\"/>\r\n                </div>\r\n            );\r\n        }\r\n        return '';\r\n    }\r\n\r\n    renderNext() {\r\n        const { treeObjects, currentUri } = this.props; \r\n        const doc = treeObjects[currentUri];\r\n\r\n        if (doc && doc.next) {\r\n            return (\r\n                <div className=\"content-next-doc\" onClick={() => this.props.selectDocument(doc.next)}>\r\n                    <KeyboardArrowRight fontSize=\"large\"/>\r\n                </div>\r\n            );\r\n        }\r\n        return '';\r\n    }\r\n\r\n    render() {\r\n        const {documents, currentUri} = this.props;\r\n        let content = '';\r\n\r\n        if (documents && currentUri) {\r\n            if(documents[currentUri]) {\r\n                content = documents[currentUri];\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                {this.renderPrev()}\r\n                {this.renderNext()}\r\n\r\n                <ReactMarkdown \r\n                    source={content}\r\n                    disallowedTypes={['linkReference', 'imageReference']}\r\n                    renderers={{\r\n                        text: renderedText,\r\n                        link: renderedLink,\r\n                        image: renderedImage\r\n                    }}\r\n                />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { treeObjects, documents, currentUri, prev, next } = state.view;\r\n\r\n    return { treeObjects, documents, currentUri, prev, next };\r\n};\r\n\r\nexport default connect(mapStateToProps, Actions)(GitViewer);\r\n","const Styles = (theme) => {\r\n    return {\r\n        dataTreeSubList: {\r\n            paddingLeft: 10\r\n        },\r\n        listItemText: {\r\n            paddingLeft: '0px !important'\r\n        },\r\n        listModuleItem: {\r\n            paddingLeft: 10,\r\n            paddingRight: 10\r\n        },\r\n        collapseItemParent: {\r\n            backgroundColor: theme.palette.action.hover,\r\n            marginBottom: 2,\r\n            paddingLeft: 10,\r\n            paddingRight: 10 \r\n        },\r\n        notFoundBlock: {\r\n            padding: 15,\r\n            textAlign: 'center',\r\n            backgroundColor: theme.palette.background.default,\r\n            margin: '0px 8px',\r\n            boxSizing: 'border-box'\r\n        },\r\n        dataTreeItem: {\r\n            padding: '5px 10px'\r\n        },\r\n        dataTreeSelectedItem: {\r\n            padding: '5px 10px',\r\n            backgroundColor: theme.palette.action.selected\r\n        }\r\n    }\r\n}; \r\n\r\nexport default Styles;","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\n//modules\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\n\r\n//components\r\nimport { \r\n    DataTreeItem,\r\n    DataTreeCollapseItem\r\n}  from 'components/DataTree';\r\n\r\n//assets\r\nimport DataTreeStyles from \"assets/js/DataTree.js\"; \r\n\r\nclass DataTree extends Component {\r\n    renderListItem(line) {\r\n        let current = false;\r\n        let opened = false;\r\n        \r\n        if(this.props.searchString != '') opened = true;\r\n        if(line.pages) {\r\n            return <DataTreeCollapseItem key={`line_${line.name}`} data={line} opened={opened} action={this.props.action}/>;\r\n        }\r\n\r\n        if(this.props.currentUri === line.uri) current = true;\r\n        return <DataTreeItem key={`line_${line.name}`} data={line} action={this.props.action} selected={current} />;\r\n    }\r\n\r\n    render() {\r\n        const { data, classes } = this.props;\r\n\r\n        if (data.length > 0) {\r\n            return (\r\n                <div className={classes.dataTreeContainer}>\r\n                    <List dense={true}>\r\n                        {data.map((line) => this.renderListItem(line))}\r\n                    </List>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className={classes.notFoundBlock}>\r\n                    <Typography>\r\n                        Nothing found\r\n                    </Typography>\r\n                </div>\r\n            );\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nDataTree.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    data: PropTypes.array,\r\n    opened: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { currentElement, currentUri, searchString } = state.view;\r\n\r\n    return { currentElement, currentUri, searchString };\r\n};\r\n\r\nconst connectedDataTree = connect(mapStateToProps, null)(DataTree);\r\n\r\nexport default withStyles(DataTreeStyles)(connectedDataTree);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\n//actions\r\nimport * as Actions from 'actions/index';\r\n\r\n//modules\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n//assets\r\nimport DataTreeStyles from \"assets/js/DataTree.js\";\r\n\r\nclass DataTreeItem extends Component {\r\n    execAction(data) {\r\n        if(data.action) {\r\n            this.props[data.action](JSON.parse(data.data))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes, data } = this.props;\r\n        const itemClass = this.props.selected ? classes.dataTreeSelectedItem : classes.dataTreeItem;\r\n\r\n        return (\r\n            <ListItem \r\n                className={classes.dataTreeItem}\r\n                key={`item_${data.name}`}\r\n                button={this.props.action !== undefined}\r\n                onClick={() => this.props.action(data)}\r\n                selected={this.props.selected}\r\n            >\r\n                <ListItemText \r\n                    className={classes.listItemText} \r\n                    primary={data.name}  \r\n                />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nDataTreeItem.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    data: PropTypes.object\r\n};\r\n\r\nconst connectedDataTreeItem = connect(null, Actions)(DataTreeItem);\r\n\r\nexport default withStyles(DataTreeStyles)(connectedDataTreeItem);","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\n//modules\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\n//coponents\r\nimport { DataTree } from 'components/DataTree';\r\n\r\n//assets\r\nimport DataTreeStyles from \"assets/js/DataTree.js\";\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nclass DataTreeCollapseItem extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n    \r\n    toggleCollapse() {\r\n        this.setState({open: !this.state.open});\r\n    }\r\n\r\n    renderCollapseList() {\r\n        const { data } = this.props;\r\n        const open = data.open || this.state.open || this.props.opened;\r\n        \r\n        if (data.pages.length > 0) {\r\n            return (\r\n                <Collapse \r\n                    in={open} \r\n                    timeout=\"auto\" \r\n                    unmountOnExit\r\n                >\r\n                    <DataTree data={data.pages} action={this.props.action}/>\r\n                </Collapse>\r\n            );\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes, data } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <ListItem \r\n                    button={!data.open}\r\n                    onClick={this.toggleCollapse.bind(this)} \r\n                    className={classes.collapseItemParent}\r\n                >\r\n                    {this.state.open ? (\r\n                        <ListItemIcon>\r\n                            <FolderOpenIcon />\r\n                        </ListItemIcon>\r\n                    ) : (\r\n                        <ListItemIcon>\r\n                            <FolderIcon />\r\n                        </ListItemIcon>\r\n                    )}\r\n                    \r\n                    <ListItemText inset primary={data.name} className={classes.listItemText} />\r\n\r\n                    {data.open ? '' : (\r\n                        <Typography>\r\n                            {this.state.open ? <ExpandLess /> : <ExpandMore />}\r\n                        </Typography>\r\n                    )}\r\n                </ListItem>\r\n\r\n                 {this.renderCollapseList()}   \r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nDataTreeCollapseItem.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    data: PropTypes.object,\r\n    opened: PropTypes.any\r\n};\r\n\r\nexport default withStyles(DataTreeStyles)(DataTreeCollapseItem);","import _ from 'lodash';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport yaml from 'js-yaml';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\n//modules \r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { DataTree } from 'components/DataTree/index';\r\n\r\n//utils\r\nimport { forEach } from 'classes/Utils';\r\n\r\n//actions\r\nimport * as Actions from 'actions/index';\r\n\r\n//assets\r\nimport ViewerStyles from 'assets/js/DocumentationViewer.js';\r\nimport 'assets/Viewer.css';\r\n\r\nclass GitBuilder extends Component {\r\n    \r\n    componentDidMount() {\r\n        this.props.getRepoData();\r\n        this.props.getRepoVersions();\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        const { user, repo } = this.props;\r\n\r\n        if (user !== newProps.user || repo !== newProps.repo) {\r\n            this.props.getRepoData('master', newProps.user, newProps.repo);\r\n            this.props.getRepoVersions(newProps.user, newProps.repo);\r\n        }\r\n    }\r\n\r\n    checkCurrentDocument(tree) {\r\n        const { currentElement } = this.props;\r\n        let inTree = false;\r\n        if (currentElement) {\r\n            forEach(tree, (obj) => {\r\n                if (obj.uri && obj.uri === currentElement.uri) {\r\n                    this.props.selectDocument(obj);\r\n                    inTree = true;\r\n                    return false;\r\n                }\r\n            })\r\n\r\n            if(!inTree) {\r\n                this.props.selectDocument(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    listItemClick(elem) {\r\n        this.props.selectDocument(elem);\r\n    }\r\n\r\n    renderVersions() {\r\n        const { classes } = this.props;\r\n        const { versions, version } = this.props;\r\n\r\n        if (versions && versions.length > 0) {\r\n\r\n            return (\r\n                <div className={classes.versionBoxContainer}>\r\n                    <Select\r\n                        value={version}\r\n                        onChange={(event) => {\r\n                            const version = event.target.value;\r\n                            this.props.getRepoData(version);\r\n                        }}\r\n                        name=\"version\"\r\n                        displayEmpty\r\n                        className={classes.versionSelect}\r\n                    >\r\n                        <MenuItem value=\"master\">Master</MenuItem>\r\n                        {versions.map(ver => {\r\n                            return (\r\n                                <MenuItem key={`ver_${ver}`} value={ver}>{ver}</MenuItem>\r\n                            );\r\n                        })}\r\n                    </Select>\r\n                    \r\n                    <FormHelperText>Documentation version</FormHelperText>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    prepareTreeData(data) {\r\n        let temp = [];\r\n        const { searchString, documents } = this.props;\r\n        const reg = new RegExp(searchString, 'gi');\r\n\r\n        if (searchString != '') {\r\n            if (data.length > 0) {\r\n                for (let i = 0; i < data.length; i++) {\r\n                    var o = data[i];\r\n\r\n                    if (o.pages) {\r\n                        let t = this.prepareTreeData(o.pages);\r\n    \r\n                        if (t.length > 0) {\r\n                            temp.push({\r\n                                ...o,\r\n                                pages: t\r\n                            });\r\n                        }\r\n                    } else {\r\n                        let content = documents[o.uri];\r\n                        if (content.search(reg) !== -1) {\r\n                            temp.push(o);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            temp = data;\r\n        }\r\n        \r\n        return temp;\r\n    }\r\n\r\n    renderTree() {\r\n        const { tree } = this.props;\r\n        const data = this.prepareTreeData(tree);\r\n\r\n        return (\r\n            <DataTree \r\n                data={data} \r\n                action={(element) => this.listItemClick(element)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                {this.renderVersions()}\r\n                <Divider />\r\n                {this.renderTree()}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nGitBuilder.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state.view;\r\n};\r\n\r\nconst connectedGitBuilder = connect(mapStateToProps, Actions)(GitBuilder);\r\n\r\nexport default withStyles(ViewerStyles)(connectedGitBuilder);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n//actions\r\nimport * as Actions from 'actions/index';\r\n\r\n//assets\r\nimport ViewerStyles from 'assets/js/DocumentationViewer.js';\r\nimport 'assets/Viewer.css';\r\n\r\nclass GitSearcher extends Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    handleCancleClick() {\r\n        this.props.setState({searchString: ''});\r\n    }\r\n\r\n    handeSearchChange(event) {\r\n        const str = event.target.value;\r\n\r\n        this.props.setState({searchString: str});\r\n    }\r\n\r\n    handleSearchKeyPress(event) {\r\n        if (event.charCode === 13) {\r\n            event.target.blur();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className={classes.searchContainer}>\r\n                <div className={classes.search}>\r\n                    <div className={classes.searchIcon}>\r\n                        <SearchIcon />\r\n                    </div>\r\n\r\n                    <InputBase\r\n                        placeholder=\"Search…\"\r\n                        classes={{\r\n                            root: classes.inputRoot,\r\n                            input: classes.inputInput,\r\n                        }}\r\n                        value={this.props.searchString}\r\n                        onChange={(event) => this.handeSearchChange(event)}\r\n                        onKeyPress={(event) => this.handleSearchKeyPress(event)}\r\n                    />\r\n\r\n                    {this.props.searchString !== '' ? (\r\n                        <Button className={classes.closeIcon} onClick={this.handleCancleClick.bind(this)}>\r\n                            <CloseIcon />\r\n                        </Button>\r\n                    ) : ''}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGitSearcher.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { searchString } = state.view;\r\n    return { searchString };\r\n};\r\n\r\nconst connectedGitSearcher = connect(mapStateToProps, Actions)(GitSearcher);\r\n\r\nexport default withStyles(ViewerStyles)(connectedGitSearcher);","import React, { Component } from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\n\n//modules\nimport DocumentationViewer from 'components/DocumentationViewer';\n\n//classes\nimport Viewer from 'components/Viewer/GitViewer';\nimport Builder from 'components/Viewer/GitBuilder';\nimport Searcher from 'components/Viewer/GitSearcher';\n\n//assets\nimport 'react-perfect-scrollbar/dist/css/styles.css';\n\nclass App extends Component {\n\n  render() {\n    const theme = createMuiTheme({\n      palette: {\n          type: this.props.theme\n      }\n    });\n\n    const builder = <Builder/>;\n    const searcher = <Searcher/>;\n    const viewer = <Viewer />;\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <DocumentationViewer \n          className={`${this.props.theme}`}\n          viewer={viewer}\n          builder={builder}\n          searcher={searcher}\n        />\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return state.settings;\n};\n\nexport default connect(mapStateToProps, null)(App);\n","import * as Types from 'actions/types';\r\nimport createHistory from 'history/createBrowserHistory';\r\n\r\nlet INITIAL_STATE = {\r\n    docsFile: 'https://raw.githubusercontent.com/untillpro/untill-air-docs-toc/master/repos.yml',\r\n    tocFile: 'toc.yml',\r\n\r\n    user: null,\r\n    repo: null,\r\n    \r\n    types: [],\r\n\r\n    header: 'UnTill documentation',\r\n    documents: {},\r\n    content: '',\r\n    tree: [],\r\n    treeObjects: {},\r\n    versions: [],\r\n    version: 'master',\r\n    currentElement: null,\r\n    searchString: '',\r\n    currentType: null\r\n}\r\n\r\nconst parseLocation = (path) => {\r\n    var uri = null,\r\n        index = null;\r\n    var props = {\r\n        0: null,\r\n        1: null,\r\n        2: null\r\n    };\r\n\r\n    const count = 3;\r\n    var PATH = path;\r\n    \r\n    PATH = PATH.slice(1, PATH.length);\r\n\r\n    for (let i = 0; i < count; i++) {\r\n        if (PATH.length > 0) {\r\n            index = PATH.indexOf('/');\r\n            \r\n            if (index >= 0) {\r\n                props[i] = PATH.slice(0, index);\r\n                PATH = PATH.slice(index+1, PATH.length);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (PATH.length > 0) uri = PATH;\r\n\r\n    if (props[0] && props[1] && props[2] && uri) {\r\n        return { user: props[0], repo: props[1], version: props[2], uri };\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nconst history = createHistory();\r\nconst location = history.location;\r\n\r\nconst res = parseLocation(location.hash);\r\n\r\nINITIAL_STATE = {...INITIAL_STATE, ...res};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case Types.SET_STATE:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        case Types.SELECT_DOCUMENT:\r\n            const uri = action.payload;\r\n\r\n            history.push(`#${state.user}/${state.repo}/${state.version}/${uri}`);\r\n\r\n            return {\r\n                ...state,\r\n                currentUri: uri\r\n            };\r\n        case Types.CHECK_BROWSER_HISTORY:\r\n            let location;\r\n            if (action.payload) {\r\n                location = action.payload;\r\n            } else {\r\n                location = history.location;\r\n            }\r\n\r\n            const res = parseLocation(location.hash);\r\n\r\n            if (res !== null) {\r\n                return {\r\n                    ...state,\r\n                    user: res.user,\r\n                    repo: res.repo,\r\n                    verstion: res.version,\r\n                    currentUri: res.uri\r\n                };    \r\n            }\r\n\r\n            return state;\r\n        case Types.SET_DOCUMENTATION_TYPES: \r\n            if (action.payload) {\r\n                return {\r\n                    ...state,\r\n                    types: action.payload\r\n                };\r\n            }\r\n            return state;\r\n        case Types.SET_DOCUMENTATION_TYPE: \r\n            var type = state.types[action.payload];\r\n\r\n            if (type) {\r\n                return {\r\n                    ...state,\r\n                    currentType: action.payload,\r\n                    user: type.user,\r\n                    repo: type.repo,\r\n                    version: 'master',\r\n                    searchString: ''\r\n                };\r\n            }\r\n\r\n            return state;\r\n            \r\n        case Types.SET_REPO_DOCUMENTS_CONTENT: \r\n            return {\r\n                ...state,\r\n                documents: action.payload\r\n            };\r\n        default: return state;\r\n    }\r\n}\r\n","import { Cookies } from 'react-cookie';\r\nimport {\r\n    SET_TOGGLE_OPENED,\r\n    SET_PROP\r\n} from 'actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n    opened: false,\r\n    theme: 'dark'\r\n};\r\n\r\nvar cookies = new Cookies();\r\nvar theme = cookies.get('theme');\r\n\r\nif(theme && theme != '' && (theme === 'light' || theme === 'dark')) {\r\n    INITIAL_STATE.theme = theme;\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case SET_TOGGLE_OPENED: \r\n            return {\r\n                ...state,\r\n                opened: !state.opened\r\n            };\r\n        case SET_PROP: {\r\n            return {\r\n                ...state,\r\n                [action.payload.prop]: action.payload.value\r\n            }\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport ViewerReducer from './ViewerReducer';\r\nimport SettingsReducer from './SettingsReducer';\r\n\r\n\r\nconst reducers = combineReducers({\r\n    view: ViewerReducer,\r\n    settings: SettingsReducer\r\n});\r\n\r\nexport default reducers;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport { CookiesProvider } from 'react-cookie';\n\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport ReduxThunk from 'redux-thunk';\n\nimport reducers from 'reducers/index.js';\n\nimport 'typeface-roboto'; // roboto font\n\nimport 'assets/index.css';\n\nconst store = createStore(reducers, {}, applyMiddleware(ReduxThunk));\n\nReactDOM.render((\n    <Provider store={store}>\n        <CookiesProvider>\n            <App />\n        </CookiesProvider>\n    </Provider> \n), document.getElementById('root'));\n"],"sourceRoot":""}